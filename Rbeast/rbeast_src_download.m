function rbeast_src_download()
% <strong>rbeast_src_download</strong>: Download the BEAST C/C++ source
% files from the Github to your local folder ( i.e, $(your-beast-path)/source).
% Needed only if the provided pre-built mex file (e.g., Rbeast.mexw64 for Windows,
% Rbeast.mexa64 for Linux) is not working and you want to generate it for your machine. 
%
% After downowling the source files, try <strong>rbeast_src_compile</strong>
% to automatically complile for Rbeast.mex if Matlab has a default compiler
% appropriately set up for mex. Otherwise, compile the sources mannually
% usng a compiler. 
% 
% If you really need your own version of Rbeast.mex rather than the default
% one provided and this rbeast_srcfile_compile script doesn't work. Contact 
% bDr. Kaiguang Zhao at zhao.1423@osu.edu for support
%
%%
% codeitself = webread('https://b.link/cmex',weboptions('CertificateFilename',''));
%%
beastPath=rbeast_path() ;
if isempty(beastPath)
	fprintf("Seems like that the Rbeast code is not installed. Please run 'rbeast_install' first to downloadd and install the program from Github.\n" );
	return;
end
%% The list of C headers and source files
f1={  '_beastv2_gui_plot.c'                , ...
    '_beastv2_gui_winmain.c'             , ...
    'abc_common.c'                       , ...
    'abc_cpu.c'                          , ...
    'abc_date.c'                         , ...
    'abc_dir.c'                          , ...
    'abc_ide_util_common.c'                     , ...
    'abc_ide_util_R.c'                     , ...
    'abc_ide_util_matlab.c'                     , ...
    'abc_ide_util_python.c'                     , ...
    'abc_ioFlush.c'                      , ...
    'abc_lzw.c'                          , ...
    'abc_mat.c'                          , ...
    'abc_math.c'                         , ...
    'abc_math_avx.c'                     , ...
    'abc_math_avx512.c'                  , ...
    'abc_mcmc.c'                         , ...
    'abc_mem.c'                          , ...
    'abc_mem_ext.c'                      , ...
    'abc_pthread.c'                      , ...
    'abc_rand_pcg_global.c'              , ...
    'abc_rand_pcg_local.c'               , ...
    'abc_rand_pcg_local_avx2.c'          , ...
    'abc_rand_pcg_local_avx512.c'        , ...
    'abc_rand_pcg_local_generic.c'       , ...
    'abc_sort.c'                         , ...
    'abc_svd.c'                          , ...
    'abc_system.c'                       , ...
    'abc_timer.c'                        , ...
    'abc_ts_func.c'                      , ...
    'abc_tranpose.c'                      , ...
    'abc_vec.c'                          , ...
    'abc_vec_avx2.c'                     , ...
    'abc_vec_avx512.c'                   , ...
    'abc_vec_generic.c'                  , ...
    'abc_win32_demo.c'                   , ...
    'beastv2_COREV4.c'                   , ...
    'beastv2_COREV4_gui.c'               , ...
    'beastv2_COREV4_mthrd.c'             , ...
    'beastv2_basis_allocinitmem.c'       , ...
    'beastv2_basis_computexy_q.c'        , ...
    'beastv2_basis_cvtKnotsToBinVec.c'   , ...
    'beastv2_basis_genrandbasis.c'       , ...
    'beastv2_basis_gensegment.c'         , ...
    'beastv2_basis_pickcmptId.c'         , ...
    'beastv2_basis_proposeNew_q.c'       , ...
    'beastv2_basis_updateKsKe_prec0123.c', ...
    'beastv2_basis_updategoodvec.c'      , ...
    'beastv2_func_q.c'                   , ...
    'beastv2_io_in_args.c'               , ...
    'beastv2_io_in_readts.c'             , ...
    'beastv2_io_out_allocmem_q.c'        , ...
    'beastv2_io_out_printargs.c'         , ...
    'beastv2_io_out_write_q.c'           , ...
    'beastv2_io_out_tsextractprint.c'    , ...
    'beastv2_model_allocinit_q.c'        , ...
    'beastv2_prior_model.c'              , ...
    'beastv2_prior_precfunc.c'           , ...
    'beastv2_xxyy_allocmem_q.c'          , ...
	'beastv2_date.c'                     , ...
    'globalvars.c'                       , ...
    'glue_code.c'                        ,  ...
    'tetris.c'                           ,...
    'beastv2_svdbasis.c' ...
    };
f2={ 'abc_000_macro.h'          , ...
    'abc_000_warning.h'        , ...
    'abc_001_config.h'         , ...
    'abc_blas_lapack_lib.h'    , ...
    'abc_blas_lapack_mkl.h'    , ...
    'abc_blas_lapack_myl.h'    , ...
    'abc_blas_lapack_myl_old.h', ...
    'abc_common.h'             , ...
    'abc_cpu.h'                , ...
    'abc_datatype.h'           , ...
    'abc_date.h'               , ...
    'abc_dir.h'                , ...
    'abc_dirent.h'             , ...
    'abc_ide_util.h'           , ...
    'abc_mat.h'                , ...
    'abc_math.h'               , ...
    'abc_math_avx.h'           , ...
    'abc_math_avx512.h'        , ...
    'abc_mcmc.h'               , ...
    'abc_mem.h'                , ...
    'abc_mem_ext.h'            , ...
    'abc_pthread.h'            , ...
    'abc_rand.h'               , ...
    'abc_rand_mkl.h'           , ...
    'abc_rand_pcg_global.h'    , ...
    'abc_rand_pcg_local.h'     , ...
    'abc_sort.h'               , ...
    'abc_system.h'             , ...
    'abc_tranpose.h'          , ...
    'abc_timer.h'              , ...
    'abc_ts_func.h'            , ...
    'abc_vec.h'                , ...
    'abc_win32_demo.h'         , ...
    'beastv2_func.h'           , ...
    'beastv2_header.h'         , ...
    'beastv2_header_solaris.h' , ...
    'beastv2_io.h'             , ...
    'beastv2_model_allocinit.h', ...
    'beastv2_prior_precfunc.h' , ...
    'beastv2_xxyy_allocmem.h'  , ...
    'globalvars.h'             };

fList=[f1,f2];

srcpath = fullfile(beastPath,'source');
if ~exist(srcpath,"dir")
    mkdir(srcpath);
end

%%
isOctave = exist('OCTAVE_VERSION', 'builtin') ~= 0;

%%
rpath = "https://github.com/zhaokg/Rbeast/raw/master/Source/";
fprintf("<strong>Dowloading the C/C++  headers and source files from http://github.com/zhaokg/Rbeast </strong>...\n" );
for i=1:numel(fList)
	fn     = fList{i};                   %fn    = string(datalist{i});
    lfile  = fullfile(srcpath,fn);
	rfile  = strcat(rpath, fn);          %rfile = rpath+"testdata/"+fn;    
	if exist(lfile,"file")
      fprintf('Overwriting: %s exists and is being overwritten.\n', lfile);
    end        
    if isOctave
	  urlwrite(rfile,lfile);
	else
	  websave(lfile, rfile,weboptions('CertificateFilename',[]));
    end    
    fprintf('Downloaded: %s\n', lfile);
end
fprintf("<strong>Dowloadiing files from GitHub: Finished</strong> ...\n" );
fprintf("Try rbeast_src_compile to automatically complile for Rbeast,mex or \n" );
fprintf("manuualy compile outside Matlab using a C compiler. \n" );
%%

 